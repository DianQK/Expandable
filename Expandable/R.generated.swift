// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift

import Foundation
import Rswift
import UIKit

/// This `R` struct is code generated, and contains references to static resources.
struct R {

    /// This `R.reuseIdentifier` struct is generated, and contains static references to 6 reuse identifiers.
    struct reuseIdentifier {
        /// Reuse identifier `DatePickerCell`.
        static let datePickerCell: ReuseIdentifier<DatePickerCell> = ReuseIdentifier(identifier: "DatePickerCell")
        /// Reuse identifier `NormalCell`.
        static let normalCell: ReuseIdentifier<UITableViewCell> = ReuseIdentifier(identifier: "NormalCell")
        /// Reuse identifier `NormalItemCell`.
        static let normalItemCell: ReuseIdentifier<UITableViewCell> = ReuseIdentifier(identifier: "NormalItemCell")
        /// Reuse identifier `SliderCell`.
        static let sliderCell: ReuseIdentifier<SliderCell> = ReuseIdentifier(identifier: "SliderCell")
        /// Reuse identifier `SwitchCell`.
        static let switchCell: ReuseIdentifier<SwitchCell> = ReuseIdentifier(identifier: "SwitchCell")
        /// Reuse identifier `TextFieldCell`.
        static let textFieldCell: ReuseIdentifier<TextFieldCell> = ReuseIdentifier(identifier: "TextFieldCell")

        fileprivate init() {}
    }

    /// This `R.segue` struct is generated, and contains static references to 0 view controllers.
    struct segue {
        fileprivate init() {}
    }

    /// This `R.storyboard` struct is generated, and contains static references to 2 storyboards.
    struct storyboard {
        /// Storyboard `LaunchScreen`.
        static let launchScreen = _R.storyboard.launchScreen()
        /// Storyboard `Main`.
        static let main = _R.storyboard.main()

        /// `UIStoryboard(name: "LaunchScreen", bundle: ...)`
        static func launchScreen(_: Void = ()) -> UIStoryboard {
            return UIStoryboard(resource: R.storyboard.launchScreen)
        }

        /// `UIStoryboard(name: "Main", bundle: ...)`
        static func main(_: Void = ()) -> UIStoryboard {
            return UIStoryboard(resource: R.storyboard.main)
        }

        fileprivate init() {}
    }

}

struct _R {
    static let applicationLocale = hostingBundle.preferredLocalizations.first.flatMap(Locale.init) ?? Locale.current
    static let hostingBundle = Bundle(identifier: "gg.swift.t.Expandable") ?? Bundle.main

    struct nib {
        fileprivate init() {}
    }

    struct storyboard {
        struct launchScreen: StoryboardResourceWithInitialControllerType {
            typealias InitialController = UIViewController

            let bundle = _R.hostingBundle
            let name = "LaunchScreen"

            fileprivate init() {}
        }

        struct main: StoryboardResourceWithInitialControllerType {
            typealias InitialController = ViewController

            let bundle = _R.hostingBundle
            let name = "Main"

            fileprivate init() {}
        }

        fileprivate init() {}
    }

    fileprivate init() {}
}
